https://leetcode.com/problems/combination-sum/solutions/3768951/combination-sum-leetcode/

class Solution {
public:
    vector<vector<int>> ans;
    void solve(int index, vector<int>& temp, vector<int>& arr, int target){
        // base case:-
        if(target == 0){
            ans.push_back(temp);
            return;
        }
        if(target < 0){
            return;
        }
        if(index == arr.size()){
            return;
        }

        // now the other cases:-
        solve(index+1, temp, arr, target);

        temp.push_back(arr[index]);
        solve(index,temp,arr,target - arr[index]);
        temp.pop_back();
    }
    vector<vector<int>> combinationSum(vector<int>& candidates, int target) {
        ans.clear();
        vector<int>temp;
        int index = 0;
        solve(index ,temp ,candidates ,target);
        return ans;
    }
By ~ Shubham Verma
};
